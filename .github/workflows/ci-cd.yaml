name: CI/CD Pipeline for Crypto Platform

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행

env:
  # Terraform Output에서 가져온 값들을 GitHub Secrets에 등록하세요
  AWS_REGION: "ap-northeast-2"
  ECR_REPOSITORY_URL: ${{ secrets.ECR_REPOSITORY_URL }} # 예: 123456789012.dkr.ecr.ap-northeast-2.amazonaws.com/crypto-platform/app
  EKS_CLUSTER_NAME: "crypto-platform-eks" # Jinnie님의 EKS 클러스터 이름
  IAM_ROLE_ARN: ${{ secrets.IAM_ROLE_ARN }} # 2단계에서 만든 GitHub Actions 역할 ARN

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    # 1. OIDC를 사용하기 위한 권한 설정
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        id: build-image
        run: |
          # Git commit SHA를 이미지 태그로 사용하여 버전을 관리
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPOSITORY_URL:$IMAGE_TAG -t $ECR_REPOSITORY_URL:latest .
          docker push $ECR_REPOSITORY_URL:$IMAGE_TAG
          docker push $ECR_REPOSITORY_URL:latest
          # CD 단계에서 이미지 태그를 사용할 수 있도록 출력 변수로 설정
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT